<launch>
  <!-- global PARAMS Change here if needed -->
  <arg name="gui" default="True" />
  <arg name="autostart" default="true"/>
  <arg name="serial_device" default="/dev/ttyUSB0"/>
  <arg name="simulation" default="False"/>
  <arg name="log_config" default="$(find schunk_svh_driver)/etc/logging.xml" />
  <!-- BEWARE SET THIS TO FALSE TO USE THE HAND WITH ANY OTHER ROS TOOL -->
  <arg name="standalone" default="true"/>

  <!-- load basic configuration -->
  <rosparam file="$(find schunk_svh_driver)/etc/svh.yaml" command="load" ns="svh_controller"/>
  <!-- Load Yaml Configuration file-->
  <rosparam file="$(find schunk_svh_driver)/etc/controller_default.yaml" command="load" ns="svh_controller"/>
  <!-- Load the User Config file which will overwrite values from default -->
  <rosparam file="$(find schunk_svh_driver)/etc/controller_user.yaml" command="load" ns="svh_controller"/>
 
  <!-- Robot description for State publishers -->
  <param name="robot_description" command="$(find xacro)/xacro.py $(find schunk_svh_driver)/description/urdf/svh-standalone.urdf.xacro" />

  <!-- Launch actual driver node (if not in simulation)-->
  <node unless="$(arg simulation)" name="svh_controller" pkg="schunk_svh_driver" type="svh_controller" output="screen">
    <param name="serial_device" value="$(arg serial_device)"/>
    <param name="autostart" value="$(arg autostart)" />
    <!-- Params for the ICL (driver internal) logging. General configuration in the given logging.xml, output will be saved to the who given files -->
    <param name="log_config" value="$(arg log_config)" />
    <param name="log_debug_file" value="$(find schunk_svh_driver)/log/DriverSVH_Debug.log" />
    <param name="log_trace_file" value="$(find schunk_svh_driver)/log/DriverSVH_Trace.log" />
  </node>

  <!-- Start RQT by default if not specified otherwise -->
  <node if="$(arg gui)" name="rqt_gui" pkg="rqt_gui" type="rqt_gui" />

  <!-- Joint state publisher is needed in order to use the mimic tag within the URDF (needed for propper visualization) Hardware will work without it thoug -->
    <node name="output_joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
            <rosparam unless="$(arg simulation)" param="source_list">["svh_controller/channel_feedback"] </rosparam>
            <!-- only show the gui if simulation was selected, otherwise this joint state publisher is just used for the tags -->
            <param name="use_gui" value="$(arg simulation)"/>
    </node>


  <!-- Robot state publisher for the TFs -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
  </node>

  <!-- Joint state publisher to provide easy control of the real hardware. Enable this node if you want to have fast input with sliders -->
  <!-- will only be used if no "simulation" is selected. AND the cdontroller is not started as standalone. -->
  <!-- NOTE: In order to provide input from you software -> remove this complete node or set the standalone flag to false. Otherwise the joint state publisher will overwrite your values -->
  <group unless="$(arg simulation)">
  <node if="$(arg standalone)" name="input_joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        <remap from="joint_states" to="svh_controller/channel_targets" />
        <!-- if this node is used we always want to see its output -->
        <param name="use_gui" value="true"/>
  </node>
  </group>
  
</launch>
